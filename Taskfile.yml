version: '3'

tasks:
  app:rails:new:
    preconditions:
      ##
      # - https://github.com/go-task/task/issues/241
      #
      - sh: "[ '{{.RAILS_VERSION}}' != '<no value>' ]"
        msg: "ENV variable `RAILS_VERSION` is NOT set"
    ##
    # TODO: Create Rails template.
    #
    cmds:
      ##
      # NOTE: Actually creates a new Rails app.
      #
      - gem install rails -v {{.RAILS_VERSION}}.0
      - mkdir -p app/rails_{{.RAILS_VERSION}}
      - cd app/rails_{{.RAILS_VERSION}} && rails _{{.RAILS_VERSION}}.0_ new app --api --database=mysql --skip-test --skip-git
      ##
      # NOTE: Removes `.ruby-version`.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/.ruby-version
      ##
      # NOTE: Places MySQL config.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/config/database.yml
      - cp app/rails_common/database.yml app/rails_{{.RAILS_VERSION}}/app/config/database.yml
      ##
      # NOTE: Replaces `ruby "x.x.x"` to `ruby ENV["RUBY_VERSION"].to_s`.
      #
      - cat app/rails_{{.RAILS_VERSION}}/app/Gemfile | ruby -pe 'gsub(/^ruby.*$/, "ruby ENV[\"RUBY_VERSION\"].to_s")' > app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp
      - rm app/rails_{{.RAILS_VERSION}}/app/Gemfile
      - cp app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp app/rails_{{.RAILS_VERSION}}/app/Gemfile
      - rm app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp
      ##
      # NOTE: Adds `appraisal` to `Gemfile`.
      #
      - echo -e '\ngem "appraisal", "~> 2.5.0"' >> app/rails_{{.RAILS_VERSION}}/app/Gemfile
      ##
      # NOTE: Creates a link to `Appraisals` inside Rails app.
      # - https://stackoverflow.com/a/44786859/12201472
      #
      - ln -f app/rails_common/Appraisals app/rails_{{.RAILS_VERSION}}/app/Appraisals
      ##
      # NOTE: Appends `require_relative "../../../rails_common/database_prefix_env_variable"` to `config/boot.rb`.
      # - https://linuxize.com/post/bash-append-to-file/#append-to-a-file-using-the-redirection-operator-
      #
      - echo -e '\nrequire_relative "../../../rails_common/database_prefix_env_variable"' >> app/rails_{{.RAILS_VERSION}}/app/config/boot.rb
      ##
      # NOTE: Replaces original `README.md`.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/README.md
      - echo -e '# Setup\n\n- This app was created by `task app:rails:new RAILS_VERSION={{.RAILS_VERSION}}`.' >> app/rails_{{.RAILS_VERSION}}/app/README.md
      ##
      # NOTE: Prints further manual steps.
      #
      # NOTE: Multiline commands.
      # - https://github.com/go-task/task/issues/274
      #
      - |
        echo -e 'Further manual steps:\n'
        echo -e '- Add `RUN cd rails_{{.RAILS_VERSION}}/app && bundle install` to all `docker/ruby_x.x/Dockerfile` files.'
        echo -e '- Update `gemfiles:clean` task.'
        echo -e '- Update `gemfiles:copy` task.'
        echo -e '- Introduce `docker:console:ruby_x.x:rails_{{.RAILS_VERSION}}` tasks.'
        echo -e '- Add `gem "rspec", "~> *.*.*", group: [:development, :test]` to Gemfile.'
        echo -e '- Add `gem "rspec-rails", "~> *.*.*", group: [:development, :test]` to Gemfile.'
        echo -e '- Rebuild Docker images.'

  app:rails:delete:
    preconditions:
      ##
      # - https://github.com/go-task/task/issues/241
      #
      - sh: "[ '{{.RAILS_VERSION}}' != '<no value>' ]"
        msg: "ENV variable `RAILS_VERSION` is NOT set"
    cmds:
      - rm -rf app/rails_{{.RAILS_VERSION}}

  appraisals:link:
    cmds:
      - ln -f app/rails_common/Appraisals app/rails_5.2/app/Appraisals
      - ln -f app/rails_common/Appraisals app/rails_6.0/app/Appraisals
      - ln -f app/rails_common/Appraisals app/rails_6.1/app/Appraisals
      - ln -f app/rails_common/Appraisals app/rails_7.0/app/Appraisals
      - ln -f app/rails_common/Appraisals app/rails_7.1/app/Appraisals

  docker:bash:ruby_2.7:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "2.7" }
      - docker compose run --rm ruby_2.7 bash
    interactive: true

  docker:bash:ruby_3.0:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.0" }
      - docker compose run --rm ruby_3.0 bash
    interactive: true

  docker:bash:ruby_3.1:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.1" }
      - docker compose run --rm ruby_3.1 bash
    interactive: true

  docker:bash:ruby_3.2:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.2" }
      - docker compose run --rm ruby_3.2 bash
    interactive: true

  docker:build:all:
    cmds:
      - task: gemfiles:clean:all
      - task: gemfiles:copy:all
      - task: appraisals:link
      ##
      # - https://docs.docker.com/engine/reference/commandline/compose_build
      #
      - docker compose build

  docker:console:ruby:rails:
    internal: true
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "{{.RUBY_VERSION}}" }
      - docker compose run --rm ruby_{{.RUBY_VERSION}} bash -c 'cd /app/rails_{{.RAILS_VERSION}}/app && bundle exec rails console'

  docker:console:ruby_2.7:rails_5.2:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "5.2" }
    interactive: true

  docker:console:ruby_2.7:rails_6.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "6.0" }
    interactive: true

  docker:console:ruby_2.7:rails_6.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "6.1" }
    interactive: true

  docker:console:ruby_2.7:rails_7.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "7.0" }
    interactive: true

  docker:console:ruby_2.7:rails_7.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "7.1" }
    interactive: true

  docker:console:ruby_3.0:rails_5.2:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "5.2" }
    interactive: true

  docker:console:ruby_3.0:rails_6.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "6.0" }
    interactive: true

  docker:console:ruby_3.0:rails_6.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "6.1" }
    interactive: true

  docker:console:ruby_3.0:rails_7.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "7.0" }
    interactive: true

  docker:console:ruby_3.0:rails_7.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "7.1" }
    interactive: true

  docker:console:ruby_3.1:rails_5.2:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "5.2" }
    interactive: true

  docker:console:ruby_3.1:rails_6.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "6.0" }
    interactive: true

  docker:console:ruby_3.1:rails_6.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "6.1" }
    interactive: true

  docker:console:ruby_3.1:rails_7.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "7.0" }
    interactive: true

  docker:console:ruby_3.1:rails_7.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "7.1" }
    interactive: true

  docker:console:ruby_3.2:rails_5.2:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "5.2" }
    interactive: true

  docker:console:ruby_3.2:rails_6.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "6.0" }
    interactive: true

  docker:console:ruby_3.2:rails_6.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "6.1" }
    interactive: true

  docker:console:ruby_3.2:rails_7.0:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "7.0" }
    interactive: true

  docker:console:ruby_3.2:rails_7.1:
    cmds:
      - task: docker:console:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "7.1" }
    interactive: true

  docker:server:ruby:rails:
    preconditions:
      ##
      # - https://github.com/go-task/task/issues/241
      #
      - sh: "[ '{{.RAILS_PORT}}' != '<no value>' ]"
        msg: "ENV variable `RAILS_PORT` is NOT set"
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "{{.RUBY_VERSION}}" }
      - rm app/rails_{{.RAILS_VERSION}}/app/tmp/pids/server.pid 2> /dev/null || true
      ##
      # NOTE: `-b 0.0.0.0` makes Rails server accessible from all hosts.
      # - https://stackoverflow.com/a/29084070/12201472
      #
      - docker compose run --rm ruby_{{.RUBY_VERSION}} bash -c 'cd /app/rails_{{.RAILS_VERSION}}/app && bundle exec rails db:create && bundle exec rails db:migrate'
      - docker compose run --rm --publish {{.RAILS_PORT}}:{{.RAILS_PORT}} ruby_{{.RUBY_VERSION}} bash -c 'cd /app/rails_{{.RAILS_VERSION}}/app && bundle exec rails server --port {{.RAILS_PORT}} -b 0.0.0.0'

  docker:server:ruby_2.7:rails_5.2:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "5.2" }
    interactive: true

  docker:server:ruby_2.7:rails_6.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "6.0" }
    interactive: true

  docker:server:ruby_2.7:rails_6.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "6.1" }
    interactive: true

  docker:server:ruby_2.7:rails_7.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "7.0" }
    interactive: true

  docker:server:ruby_2.7:rails_7.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "2.7", RAILS_VERSION: "7.1" }
    interactive: true

  docker:server:ruby_3.0:rails_5.2:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "5.2" }
    interactive: true

  docker:server:ruby_3.0:rails_6.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "6.0" }
    interactive: true

  docker:server:ruby_3.0:rails_6.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "6.1" }
    interactive: true

  docker:server:ruby_3.0:rails_7.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "7.0" }
    interactive: true

  docker:server:ruby_3.0:rails_7.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.0", RAILS_VERSION: "7.1" }
    interactive: true

  docker:server:ruby_3.1:rails_5.2:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "5.2" }
    interactive: true

  docker:server:ruby_3.1:rails_6.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "6.0" }
    interactive: true

  docker:server:ruby_3.1:rails_6.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "6.1" }
    interactive: true

  docker:server:ruby_3.1:rails_7.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "7.0" }
    interactive: true

  docker:server:ruby_3.1:rails_7.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.1", RAILS_VERSION: "7.1" }
    interactive: true

  docker:server:ruby_3.2:rails_5.2:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "5.2" }
    interactive: true

  docker:server:ruby_3.2:rails_6.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "6.0" }
    interactive: true

  docker:server:ruby_3.2:rails_6.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "6.1" }
    interactive: true

  docker:server:ruby_3.2:rails_7.0:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "7.0" }
    interactive: true

  docker:server:ruby_3.2:rails_7.1:
    cmds:
      - task: docker:server:ruby:rails
        vars: { RUBY_VERSION: "3.2", RAILS_VERSION: "7.1" }
    interactive: true

  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  # NOTE: Used by `tmuxinator`.
  #
  docker:start:
    cmds:
      - open -a Docker

  ##
  # NOTE: Dev only command.
  # NOTE: Used by `tmuxinator`.
  #
  editor:open:
    cmds:
      - code .

  gemfiles:clean:
    cmds:
      - rm app/rails_5.2/app/Gemfile.{{.RUBY_VERSION}} 2> /dev/null || true
      - rm app/rails_6.0/app/Gemfile.{{.RUBY_VERSION}} 2> /dev/null || true
      - rm app/rails_6.1/app/Gemfile.{{.RUBY_VERSION}} 2> /dev/null || true
      - rm app/rails_7.0/app/Gemfile.{{.RUBY_VERSION}} 2> /dev/null || true
      - rm app/rails_7.1/app/Gemfile.{{.RUBY_VERSION}} 2> /dev/null || true
      - rm app/rails_5.2/app/Gemfile.{{.RUBY_VERSION}}.lock 2> /dev/null || true
      - rm app/rails_6.0/app/Gemfile.{{.RUBY_VERSION}}.lock 2> /dev/null || true
      - rm app/rails_6.1/app/Gemfile.{{.RUBY_VERSION}}.lock 2> /dev/null || true
      - rm app/rails_7.0/app/Gemfile.{{.RUBY_VERSION}}.lock 2> /dev/null || true
      - rm app/rails_7.1/app/Gemfile.{{.RUBY_VERSION}}.lock 2> /dev/null || true
      - rm app/rails_5.2/app/Gemfile.lock 2> /dev/null || true
      - rm app/rails_6.0/app/Gemfile.lock 2> /dev/null || true
      - rm app/rails_6.1/app/Gemfile.lock 2> /dev/null || true
      - rm app/rails_7.0/app/Gemfile.lock 2> /dev/null || true
      - rm app/rails_7.1/app/Gemfile.lock 2> /dev/null || true

  gemfiles:clean:all:
    cmds:
      - task: gemfiles:clean
        vars: { RUBY_VERSION: "2.7" }
      - task: gemfiles:clean
        vars: { RUBY_VERSION: "3.0" }
      - task: gemfiles:clean
        vars: { RUBY_VERSION: "3.1" }
      - task: gemfiles:clean
        vars: { RUBY_VERSION: "3.2" }

  gemfiles:copy:
    cmds:
      - cp app/rails_5.2/app/Gemfile app/rails_5.2/app/Gemfile.{{.RUBY_VERSION}}
      - cp app/rails_6.0/app/Gemfile app/rails_6.0/app/Gemfile.{{.RUBY_VERSION}}
      - cp app/rails_6.1/app/Gemfile app/rails_6.1/app/Gemfile.{{.RUBY_VERSION}}
      - cp app/rails_7.0/app/Gemfile app/rails_7.0/app/Gemfile.{{.RUBY_VERSION}}
      - cp app/rails_7.1/app/Gemfile app/rails_7.1/app/Gemfile.{{.RUBY_VERSION}}

  gemfiles:copy:all:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "2.7" }
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.0" }
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.1" }
      - task: gemfiles:copy
        vars: { RUBY_VERSION: "3.2" }
  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  # NOTE: Used by `tmuxinator`.
  #
  github:open:
    cmds:
      - open -na "Google Chrome" --args --new-window --incognito "https://github.com/marian13/convenient_service_integration"

  ##
  # NOTE: Dev only command.
  #
  tmuxinator:start:
    cmds:
      - direnv exec . tmuxinator start convenient_service_integration --project-config=.dev/.tmuxinator.yml
