##
# NOTE: Current `task` version.
#   task --version
#   # => Task version: v3.23.0 (h1:egOOrya0biMnrV1W8RSEo2pviHMGTtBmy4VqxUYfcyk=)
#
# NOTE: How to udgrade `task` version? Use:
#   brew upgrade go-task
#
version: '3'

tasks:
  app:rails:new:
    requires:
      vars: [RAILS_VERSION]
    ##
    # TODO: Create Rails template.
    #
    cmds:
      ##
      # NOTE: Actually creates a new Rails app.
      #
      - gem install rails -v {{.RAILS_VERSION}}.0
      - mkdir -p app/rails_{{.RAILS_VERSION}}
      - cd app/rails_{{.RAILS_VERSION}} && rails _{{.RAILS_VERSION}}.0_ new app --api --database=mysql --skip-test --skip-git
      ##
      # NOTE: Removes `.ruby-version`.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/.ruby-version
      ##
      # NOTE: Places MySQL config.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/config/database.yml
      - cp app/rails_common/app/config/database.yml app/rails_{{.RAILS_VERSION}}/app/config/database.yml
      ##
      # NOTE: Replaces `ruby "x.x.x"` to `ruby ENV["RUBY_VERSION"].to_s`.
      #
      - cat app/rails_{{.RAILS_VERSION}}/app/Gemfile | ruby -pe 'gsub(/^ruby.*$/, "ruby ENV[\"RUBY_VERSION\"].to_s")' > app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp
      - rm app/rails_{{.RAILS_VERSION}}/app/Gemfile
      - cp app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp app/rails_{{.RAILS_VERSION}}/app/Gemfile
      - rm app/rails_{{.RAILS_VERSION}}/app/Gemfile.temp
      ##
      # NOTE: Adds `appraisal` to `Gemfile`.
      #
      - echo -e '\ngem "appraisal", "~> 2.5.0"' >> app/rails_{{.RAILS_VERSION}}/app/Gemfile
      ##
      # NOTE: Creates a link to `Appraisals` inside Rails app.
      # - https://stackoverflow.com/a/44786859/12201472
      #
      - ln -f app/rails_common/app/Appraisals app/rails_{{.RAILS_VERSION}}/app/Appraisals
      ##
      # NOTE: Creates a link to `Sidekiq` configuration.
      # - https://github.com/sidekiq/sidekiq/wiki/Using-Redis#using-an-initializer
      #
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_{{.RAILS_VERSION}}/app/config/initializers/sidekiq.rb
      ##
      # NOTE: Appends `require_relative "../../../rails_common/database_prefix_env_variable"` to `config/boot.rb`.
      # - https://linuxize.com/post/bash-append-to-file/#append-to-a-file-using-the-redirection-operator-
      #
      - echo -e '\nrequire_relative "../../../rails_common/database_prefix_env_variable"' >> app/rails_{{.RAILS_VERSION}}/app/config/boot.rb
      ##
      # NOTE: Replaces original `README.md`.
      #
      - rm app/rails_{{.RAILS_VERSION}}/app/README.md
      - echo -e '# Setup\n\n- This app was created by `task app:rails:new RAILS_VERSION={{.RAILS_VERSION}}`.' >> app/rails_{{.RAILS_VERSION}}/app/README.md
      ##
      # NOTE: Prints further manual steps.
      #
      # NOTE: Multiline commands.
      # - https://github.com/go-task/task/issues/274
      #
      # NOTE: `command; cd $OLDPWD` docs.
      # - https://superuser.com/a/862551/1180656
      #
      - |
        echo -e 'Further manual steps:\n'
        echo -e '- Update `gemfiles:clean` task.'
        echo -e '- Update `gemfiles:copy` task.'
        echo -e '- Update `link:appraisals` task.'
        echo -e '- Update `link:database` task.'
        echo -e '- Update `link:sidekiq` task.'
        echo -e '- Add `gem "rspec", "~> *.*.*", group: [:development, :test]` to Gemfile.'
        echo -e '- Add `gem "rspec-rails", "~> *.*.*", group: [:development, :test]` to Gemfile.'
        echo -e '- Execute `cd app/rails_{{.RAILS_VERSION}}/app && bundle exec rails generate rspec:install; cd $OLDPWD`.'
        echo -e '- Rebuild Docker images.'

  app:rails:delete:
    requires:
      vars: [RAILS_VERSION]
    cmds:
      - rm -rf app/rails_{{.RAILS_VERSION}}

  deps:install:
    requires:
      vars: [RAILS_VERSION]
    cmds:
      - task: gemfiles:copy
      - cd app/rails_{{.RAILS_VERSION}}/app && bundle install
      - cd app/rails_{{.RAILS_VERSION}}/app && bundle exec appraisal generate
      - cd app/rails_{{.RAILS_VERSION}}/app && bundle exec appraisal install

  deps:install:all:
    cmds:
      - task: deps:install
        vars: { RAILS_VERSION: "5.2" }
      - task: deps:install
        vars: { RAILS_VERSION: "6.0" }
      - task: deps:install
        vars: { RAILS_VERSION: "6.1" }
      - task: deps:install
        vars: { RAILS_VERSION: "7.0" }
      - task: deps:install
        vars: { RAILS_VERSION: "7.1" }

  ##
  # NOTE: Usage examples.
  #   task docker:bash RUBY_ENGINE=ruby RUBY_VERSION=2.7
  #   task docker:bash RUBY_ENGINE=ruby RUBY_VERSION=3.0
  #   task docker:bash RUBY_ENGINE=ruby RUBY_VERSION=3.1
  #   task docker:bash RUBY_ENGINE=ruby RUBY_VERSION=3.2
  #
  # NOTE: Naming `RUBY_ENGINE` is inspired by `ruby_engine` gem.
  # - https://github.com/janlelis/ruby_engine
  #
  docker:bash:
    cmds:
      - task: prepare:minimal
      - docker compose run --rm {{.RUBY_ENGINE}}_{{.RUBY_VERSION}} bash
    interactive: true
    preconditions:
      - sh: '[ "${IN_DOCKER_CONTAINER}" != "true" ]'
        msg: This task can be invoked only from the host operating system (https://www.ibm.com/cloud/learn/containerization)
    requires:
      vars: [ENGINE, VERSION]

  docker:build:all:
    cmds:
      - task: prepare:full
      ##
      # - https://docs.docker.com/engine/reference/commandline/compose_build
      #
      - docker compose build
      ##
      # NOTE: Gemfiles created during the build time are NOT persisted. The following commands persist them by triggering `bundle install` in the run time.
      # TODO: Set up `vendor` folder to cache Ruby gems? This won't help to avoid second `bundle install` since Gemfile.lock files are not committed.
      #
      - docker compose run --rm ruby_2.7 bash -c "task deps:install:all"
      - docker compose run --rm ruby_3.0 bash -c "task deps:install:all"
      - docker compose run --rm ruby_3.1 bash -c "task deps:install:all"
      - docker compose run --rm ruby_3.2 bash -c "task deps:install:all"
      - docker compose run --rm ruby_3.3 bash -c "task deps:install:all"

  ##
  # NOTE: Usage examples.
  #   RUBY_ENGINE=ruby RUBY_VERSION=2.7 RAILS_VERSION=5.2 SIDEKIQ_VERSION=5 task docker:console
  #
  docker:console:
    cmds:
      - task: prepare:minimal
      - |
        docker compose run --rm {{.RUBY_ENGINE}}_{{.RUBY_VERSION}} bash -c '
          APPRAISAL_NAME=$(SIDEKIQ_VERSION={{.SIDEKIQ_VERSION}} ruby appraisal_name.rb) \
            && echo -e "\n" \
            && echo -e "RUBY_ENGINE     - \"{{.RUBY_ENGINE}}\"" \
            && echo -e "RUBY_VERSION    - \"{{.RUBY_VERSION}}\"" \
            && echo -e "RAILS_VERSION   - \"{{.RAILS_VERSION}}\"" \
            && echo -e "SIDEKIQ_VERSION - \"{{.SIDEKIQ_VERSION}}\"" \
            && echo -e "APPRAISAL_NAME  - \"${APPRAISAL_NAME}\"" \
            && echo -e "\n" \
            && cd app/rails_{{.RAILS_VERSION}}/app \
            && bundle exec appraisal generate \
            && bundle exec appraisal ${APPRAISAL_NAME} rails console
        '
    interactive: true
    requires:
      vars: [RUBY_ENGINE, RUBY_VERSION, RAILS_VERSION, SIDEKIQ_VERSION]

  ##
  # NOTE: Usage examples.
  #   RUBY_ENGINE=ruby RUBY_VERSION=2.7 RAILS_VERSION=5.2 RAILS_PORT=3000 SIDEKIQ_VERSION=5 task docker:server
  #
  docker:server:
    cmds:
      - task: prepare:minimal
      - rm app/rails_{{.RAILS_VERSION}}/app/tmp/pids/server.pid 2> /dev/null || true
      ##
      # NOTE: `-b 0.0.0.0` makes Rails server accessible from all hosts.
      # - https://stackoverflow.com/a/29084070/12201472
      #
      - |
        docker compose run \
          --rm \
          --publish {{.RAILS_PORT}}:{{.RAILS_PORT}} \
          {{.RUBY_ENGINE}}_{{.RUBY_VERSION}} bash -c '
            APPRAISAL_NAME=$(SIDEKIQ_VERSION={{.SIDEKIQ_VERSION}} ruby appraisal_name.rb) \
              && echo -e "\n" \
              && echo -e "RUBY_ENGINE     - \"{{.RUBY_ENGINE}}\"" \
              && echo -e "RUBY_VERSION    - \"{{.RUBY_VERSION}}\"" \
              && echo -e "RAILS_VERSION   - \"{{.RAILS_VERSION}}\"" \
              && echo -e "RAILS_PORT      - \"{{.RAILS_PORT}}\"" \
              && echo -e "SIDEKIQ_VERSION - \"{{.SIDEKIQ_VERSION}}\"" \
              && echo -e "APPRAISAL_NAME  - \"${APPRAISAL_NAME}\"" \
              && echo -e "\n" \
              && cd app/rails_{{.RAILS_VERSION}}/app \
              && bundle exec appraisal generate \
              && bundle exec appraisal ${APPRAISAL_NAME} rails db:create \
              && bundle exec appraisal ${APPRAISAL_NAME} rails db:migrate \
              && bundle exec appraisal ${APPRAISAL_NAME} rails server --port {{.RAILS_PORT}} -b 0.0.0.0
          '
    interactive: true
    requires:
      vars: [RUBY_VERSION, RAILS_VERSION, SIDEKIQ_VERSION, RAILS_PORT]

  docker:sidekiq:
    cmds:
      - task: prepare:minimal
      - |
        docker compose run --rm {{.RUBY_ENGINE}}_{{.RUBY_VERSION}} bash -c '
          APPRAISAL_NAME=$(SIDEKIQ_VERSION={{.SIDEKIQ_VERSION}} ruby appraisal_name.rb) \
            && echo -e "\n" \
            && echo -e "RUBY_ENGINE     - \"{{.RUBY_ENGINE}}\"" \
            && echo -e "RUBY_VERSION    - \"{{.RUBY_VERSION}}\"" \
            && echo -e "RAILS_VERSION   - \"{{.RAILS_VERSION}}\"" \
            && echo -e "RAILS_PORT      - \"{{.RAILS_PORT}}\"" \
            && echo -e "SIDEKIQ_VERSION - \"{{.SIDEKIQ_VERSION}}\"" \
            && echo -e "APPRAISAL_NAME  - \"${APPRAISAL_NAME}\"" \
            && echo -e "\n" \
            && cd app/rails_{{.RAILS_VERSION}}/app \
            && bundle exec appraisal generate \
            && bundle exec appraisal ${APPRAISAL_NAME} sidekiq
        '
    interactive: true
    requires:
      vars: [RUBY_VERSION, RAILS_VERSION, SIDEKIQ_VERSION]

  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  # NOTE: Used by `tmuxinator`.
  #
  docker:start:
    cmds:
      - open -a Docker

  ##
  # NOTE: Dev only command.
  # NOTE: Used by `tmuxinator`.
  #
  editor:open:
    cmds:
      - code .

  gemfiles:clean:
    cmds:
      - rm app/rails_5.2/app/Gemfile*.* 2> /dev/null || true
      - rm app/rails_6.0/app/Gemfile*.* 2> /dev/null || true
      - rm app/rails_6.1/app/Gemfile*.* 2> /dev/null || true
      - rm app/rails_7.0/app/Gemfile*.* 2> /dev/null || true
      - rm app/rails_7.1/app/Gemfile*.* 2> /dev/null || true
      - rm -rf app/rails_5.2/app/gemfiles
      - rm -rf app/rails_6.0/app/gemfiles
      - rm -rf app/rails_6.1/app/gemfiles
      - rm -rf app/rails_7.0/app/gemfiles
      - rm -rf app/rails_7.1/app/gemfiles

  gemfiles:clean:all:
    cmds:
      - task: gemfiles:clean
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "2.7" }
      - task: gemfiles:clean
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.0" }
      - task: gemfiles:clean
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.1" }
      - task: gemfiles:clean
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.2" }

  gemfiles:copy:
    cmds:
      - cp app/rails_5.2/app/Gemfile app/rails_5.2/app/Gemfile.{{.RUBY_ENGINE}}_{{.RUBY_VERSION}}
      - cp app/rails_6.0/app/Gemfile app/rails_6.0/app/Gemfile.{{.RUBY_ENGINE}}_{{.RUBY_VERSION}}
      - cp app/rails_6.1/app/Gemfile app/rails_6.1/app/Gemfile.{{.RUBY_ENGINE}}_{{.RUBY_VERSION}}
      - cp app/rails_7.0/app/Gemfile app/rails_7.0/app/Gemfile.{{.RUBY_ENGINE}}_{{.RUBY_VERSION}}
      - cp app/rails_7.1/app/Gemfile app/rails_7.1/app/Gemfile.{{.RUBY_ENGINE}}_{{.RUBY_VERSION}}

  gemfiles:copy:all:
    cmds:
      - task: gemfiles:copy
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "2.7" }
      - task: gemfiles:copy
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.0" }
      - task: gemfiles:copy
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.1" }
      - task: gemfiles:copy
        vars: { RUBY_ENGINE: "ruby", RUBY_VERSION: "3.2" }
  ##
  # NOTE: Dev only command.
  # NOTE: macOS specific command.
  # NOTE: Used by `tmuxinator`.
  #
  github:open:
    cmds:
      - open -na "Google Chrome" --args --new-window --incognito "https://github.com/marian13/convenient_service_integration"

  link:all:
    cmds:
      - task: link:appraisals
      - task: link:database
      - task: link:sidekiq

  link:appraisals:
    cmds:
      - ln -f app/rails_common/app/Appraisals app/rails_5.2/app/Appraisals
      - ln -f app/rails_common/app/Appraisals app/rails_6.0/app/Appraisals
      - ln -f app/rails_common/app/Appraisals app/rails_6.1/app/Appraisals
      - ln -f app/rails_common/app/Appraisals app/rails_7.0/app/Appraisals
      - ln -f app/rails_common/app/Appraisals app/rails_7.1/app/Appraisals

  link:database:
    cmds:
      - ln -f app/rails_common/app/config/database.yml app/rails_5.2/app/config/database.yml
      - ln -f app/rails_common/app/config/database.yml app/rails_6.0/app/config/database.yml
      - ln -f app/rails_common/app/config/database.yml app/rails_6.1/app/config/database.yml
      - ln -f app/rails_common/app/config/database.yml app/rails_7.0/app/config/database.yml
      - ln -f app/rails_common/app/config/database.yml app/rails_7.1/app/config/database.yml

  link:sidekiq:
    cmds:
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_5.2/app/config/initializers/sidekiq.rb
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_6.0/app/config/initializers/sidekiq.rb
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_6.1/app/config/initializers/sidekiq.rb
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_7.0/app/config/initializers/sidekiq.rb
      - ln -f app/rails_common/app/config/initializers/sidekiq.rb app/rails_7.1/app/config/initializers/sidekiq.rb

  ##
  # NOTE: `prepare:minimal` includes tasks that do NOT require docker images rebuild.
  #
  prepare:minimal:
    cmds:
      - task: gemfiles:copy:all
      - task: link:all

  ##
  # NOTE: `prepare:full` includes `prepare:minimal` + tasks that require docker images rebuild.
  #
  prepare:full:
    cmds:
      - task: gemfiles:clean:all
      - task: gemfiles:copy:all
      - task: link:all

  ##
  # NOTE: Dev only command.
  #
  tmuxinator:start:
    cmds:
      - direnv exec . tmuxinator start convenient_service_integration --project-config=.dev/.tmuxinator.yml
